{"ast":null,"code":"var _jsxFileName = \"C:\\\\iTH_react\\\\italenthub\\\\src\\\\components\\\\pages\\\\team.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { API_URL, API_HEADERS } from '../../utils/api';\nimport axios from 'axios';\nimport { validateEmail } from '../../utils/helpers';\nimport maleImage from '../../assets/images/male-red-120-x-120.png';\nimport femaleImage from '../../assets/images/female-red-120-x-120.png';\nimport starImage from '../../assets/images/star.png';\nimport LeftArrow from '../../assets/images/left-arrow.png';\nimport RightArrowHighlight from '../../assets/images/right-arrow-highlight.png';\nimport LeftArrowHighlight from '../../assets/images/left-arrow-highlight.png';\nimport RightArrow from '../../assets/images/right-arrow.png';\nimport localforage from 'localforage';\nimport _ from 'lodash';\nimport Modal from 'simple-react-modal';\nimport SkillBar from 'react-skillbars';\nimport Loader from '../../assets/images/loader.gif';\nconst TabArray = [\"Team 1\", \"Team 2\", \"Team 3\", \"Team 4\", \"Team 5\"];\nconst TeamArray = [\"team1\", \"team2\", \"team3\", \"team4\", \"team5\"];\nconst DataArray = [\"data1\", \"data2\", \"data3\", \"data4\", \"data5\"];\nlet totalPage = 0;\nlet tempFrom = 0;\nlet tempTo = 0;\n\nclass Team extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeTab: 0,\n      data: [],\n      query: [],\n      activePage: 1,\n      from: 0,\n      to: 4,\n      showModal: false,\n      showContactModal: false,\n      skills: [],\n      talentName: \"\",\n      name: \"\",\n      companyName: \"\",\n      email: \"\",\n      isValidCompanyName: false,\n      isValidName: false,\n      isValidEmail: false,\n      nameError: \"\",\n      emailError: \"\",\n      companyNameError: \"\",\n      showSuccessMessage: \"\"\n    };\n\n    this.slideLeft = () => {\n      if (this.state.activePage > 1) {\n        let activePage = this.state.activePage - 1;\n        let from = this.state.from - 4;\n        let to = this.state.from;\n        this.setState({\n          activePage,\n          from,\n          to\n        });\n      }\n    };\n\n    this.slideRight = () => {\n      if (this.state.activePage < totalPage) {\n        let activePage = this.state.activePage + 1;\n        let from = this.state.to;\n        let to = this.state.to + 4;\n        this.setState({\n          activePage,\n          from,\n          to\n        });\n      }\n    };\n\n    this.changeActive = key => {\n      if (key === this.state.activePage) return;\n\n      if (key === 1) {\n        return this.setState({\n          activePage: key,\n          from: 0,\n          to: 4\n        });\n      }\n\n      if (key > this.state.activePage) {\n        let activePage = key;\n        let from = 0;\n        let to = 4;\n\n        for (let i = 0; i < key - 1; i++) {\n          from += 4;\n          to += 4;\n        }\n\n        this.setState({\n          activePage,\n          from,\n          to\n        });\n      } else {\n        let activePage = key;\n        let from = tempFrom === 0 ? this.state.data[this.state.activeTab].length - 4 : tempFrom;\n        let to = tempTo === 0 ? this.state.data[this.state.activeTab].length : tempTo;\n\n        for (let i = 0; i < key - 1; i++) {\n          from -= 4;\n          to -= 4;\n        }\n\n        tempFrom = from;\n        tempTo = to;\n        this.setState({\n          activePage,\n          from,\n          to\n        });\n      }\n    };\n\n    this.goRegister = () => {\n      this.props.history.push(\"/register\");\n    };\n\n    this.showSkillsModal = el => {\n      const skills = [];\n      el[`Primary Skills`].split(',').map(element => {\n        if (element === \"\") return;\n        return skills.push({\n          \"type\": element,\n          \"level\": Math.floor(Math.random() * (85 - 60 + 1) + 60)\n        });\n      });\n      el[`Secondary Skills`].split(',').map(element => {\n        if (element === \"\") return;\n        return skills.push({\n          \"type\": element,\n          \"level\": Math.floor(Math.random() * (50 - 20 + 1) + 20)\n        });\n      });\n      this.setState({\n        skills,\n        talentName: el.Name,\n        showModal: true\n      });\n    };\n\n    this.continueTeam = () => {\n      this.setState({\n        showContactModal: true\n      });\n    };\n\n    this.findAgain = () => {\n      this.props.history.push(\"/find-talent\");\n    };\n\n    this.onNameChange = (ev, isDirect = false) => {\n      const name = isDirect ? this.state.name : ev.target.value;\n      let nameError = \"\";\n      const isValidName = name !== \"\" ? true : false;\n\n      if (!isValidName) {\n        nameError = \"Name required.\";\n      }\n\n      this.setState({\n        name,\n        isValidName,\n        nameError\n      });\n    };\n\n    this.onCompanyNameChange = (ev, isDirect = false) => {\n      const companyName = isDirect ? this.state.companyName : ev.target.value;\n      let companyNameError = \"\";\n      const isValidCompanyName = companyName !== \"\" ? true : false;\n\n      if (!isValidCompanyName) {\n        companyNameError = \"Company Name required.\";\n      }\n\n      this.setState({\n        companyName,\n        isValidCompanyName,\n        companyNameError\n      });\n    };\n\n    this.onEmailChange = (ev, isDirect = false) => {\n      const email = isDirect ? this.state.email : ev.target.value;\n      const isValidEmail = validateEmail(email);\n      let emailError = \"\";\n\n      if (!isValidEmail) {\n        emailError = \"Invalid email.\";\n      }\n\n      this.setState({\n        email,\n        emailError,\n        isValidEmail\n      });\n    };\n\n    this.onContact = () => {\n      let _this = this;\n\n      if (this.state.isValidName && this.state.isValidCompanyName && this.state.isValidEmail) {\n        axios.post(API_URL + \"contact/v1/api\", {\n          \"candidate_detail\": this.state.data[TeamArray[this.state.activeTab]][DataArray[this.state.activeTab]],\n          \"employer_detail\": {\n            \"Name\": this.state.name,\n            \"Email\": this.state.email,\n            \"Company\": this.state.companyName\n          }\n        }, {\n          headers: API_HEADERS\n        }).then(response => {\n          if (response.data.status) {\n            this.setState({\n              showSuccessMessage: response.data.data,\n              showContactModal: false\n            });\n          } else {\n            this.setState({\n              serverError: response.data.data,\n              showContactModal: false\n            });\n          }\n        }).catch(error => {\n          this.setState({\n            serverError: error.message,\n            showContactModal: false\n          });\n        });\n      } else {\n        this.onEmailChange({}, true);\n        this.onNameChange({}, true);\n        this.onCompanyNameChange({}, true);\n      }\n    };\n  }\n\n  async componentDidMount() {\n    let hasdata = await localforage.getItem('find-talent');\n\n    if (hasdata) {\n      this.setState({\n        query: hasdata\n      });\n    } else {\n      return this.props.history.push(\"/find-talent\");\n    }\n\n    let _this = this;\n\n    axios.post(API_URL + \"mrs/v1/api\", {\n      \"param\": this.state.query\n    }, {\n      headers: API_HEADERS\n    }).then(response => {\n      if (response.data.status === undefined || response.data.status !== false) {\n        _this.setState({\n          data: response.data\n        });\n      } else {\n        console.log(\"Server error\", response.data.data);\n        localforage.setItem('team-error', \"Unable to find team. Please try again!!\", function (err) {\n          _this.props.history.push(\"/find-talent\");\n        });\n      }\n    }).catch(error => {\n      console.log(\"Error\", error.message);\n      localforage.setItem('team-error', \"Unable to find team. Please try again!!\", function (err) {\n        _this.props.history.push(\"/find-talent\");\n      });\n    });\n  }\n\n  render() {\n    if (!_.isEmpty(this.state.data)) {\n      const _this = this;\n\n      const colors = {\n        \"bar\": \"#ff6158\",\n        \"title\": {\n          \"text\": \"#fff\",\n          \"background\": \"#ff6158\"\n        }\n      };\n      let tagCount = true;\n      totalPage = !_.isEmpty(this.state.data) && this.state.data[TeamArray[this.state.activeTab]] ? this.state.data[TeamArray[this.state.activeTab]][\"status\"] ? Math.floor((this.state.data[TeamArray[this.state.activeTab]][DataArray[this.state.activeTab]].length + 4 - 1) / 4) : 0 : 0;\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"skills-modal-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.setState({\n          showModal: false\n        }),\n        className: \"modal-close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 33\n        }\n      }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          marginBottom: \"20px\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 33\n        }\n      }, this.state.talentName), /*#__PURE__*/React.createElement(SkillBar, {\n        skills: this.state.skills,\n        colors: colors,\n        animationDelay: 500,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.showContactModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        onClick: () => this.setState({\n          showContactModal: false\n        }),\n        className: \"modal-close\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 33\n        }\n      }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h6\", {\n        style: {\n          marginBottom: \"20px\",\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 91\n        }\n      }, TabArray[this.state.activeTab], \" Will work for you.\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"name\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 37\n        }\n      }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"name\",\n        onChange: ev => {\n          this.onNameChange(ev);\n        },\n        value: this.state.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 37\n        }\n      }, this.state.nameError)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"companyname\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 37\n        }\n      }, \"Company Name\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"companyname\",\n        onChange: ev => {\n          this.onCompanyNameChange(ev);\n        },\n        value: this.state.companyName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 37\n        }\n      }, this.state.companyNameError)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"email\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 37\n        }\n      }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        onChange: ev => {\n          this.onEmailChange(ev);\n        },\n        value: this.state.email,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 37\n        }\n      }, this.state.emailError)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"btn_div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.onContact,\n        type: \"button\",\n        className: \"btn btn-login float-right register_button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 37\n        }\n      }, \"Submit\"))))), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"main_box_heading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }\n      }, \"Meet Talent in Our Network\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"nav justify-content-center menu_content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 25\n        }\n      }, TabArray.map((el, key) => {\n        if (!this.state.data[TeamArray[key]][\"status\"]) return;\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: \"nav-item\",\n          key: key,\n          onClick: () => {\n            this.setState({\n              activeTab: key,\n              activePage: 1,\n              from: 0,\n              to: 4\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          className: `nav-link ${this.state.activeTab === key ? \"active\" : \"\"}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 45\n          }\n        }, el));\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row categories\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }\n      }, !_.isEmpty(this.state.data) && this.state.data[TeamArray[this.state.activeTab]] ? this.state.data[TeamArray[this.state.activeTab]][\"status\"] ? this.state.data[TeamArray[this.state.activeTab]][DataArray[this.state.activeTab]].slice(this.state.from, this.state.to).map((el, key) => {\n        // el = el[key];\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm-12 col-md-3 chart-block\",\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-column\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-column-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"profile_img\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: el.Gender === \"Male\" ? maleImage : femaleImage,\n          className: \"img-fluid\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 53\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"rating_div\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 53\n          }\n        }, el.rating), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ratings\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 53\n          }\n        }, Array.from(Array(el.rating), (x, index) => index + 1).map(keyIn => {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            key: keyIn,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 69\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: starImage,\n            className: \"img-fluid\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 87\n            }\n          }));\n        })))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-column-content\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card-title\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 49\n          }\n        }, el.Name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"card-desc\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 49\n          }\n        }, el.Designation), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"keywords\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 49\n          }\n        }, el[`Primary Skills`].split(',').map((element, pKey) => {\n          if (pKey > 1) return tagCount = false;\n          return element !== \"\" ? /*#__PURE__*/React.createElement(\"span\", {\n            key: pKey,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 81\n            }\n          }, element) : \"\";\n        }), el[`Secondary Skills`].split(',').map((element, pKey) => {\n          if (tagCount) {\n            return element !== \"\" ? /*#__PURE__*/React.createElement(\"span\", {\n              key: pKey,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 85\n              }\n            }, element) : \"\";\n          }\n\n          return;\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"custom-column-footer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-lg details_btn\",\n          onClick: () => this.showSkillsModal(el),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 83\n          }\n        }, \"Details\"))));\n      }) : \"\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 21\n        }\n      }, totalPage > 1 && /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-inline verticle-slider text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list-inline-item\",\n        onClick: _this.state.activePage !== 1 ? this.slideLeft : () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 134\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: _this.state.activePage !== 1 ? LeftArrowHighlight : LeftArrow,\n        alt: \"left-arrow\",\n        className: \"img-fluid slider_img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 137\n        }\n      }))), Array.from(Array(totalPage), (x, index) => index + 1).map(keyIn => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: keyIn,\n          onClick: () => {\n            _this.changeActive(keyIn);\n          },\n          className: `list-inline-item ${keyIn === _this.state.activePage ? \"active\" : \"\"}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 48\n          }\n        });\n      }), /*#__PURE__*/React.createElement(\"li\", {\n        className: \"list-inline-item\",\n        onClick: _this.state.activePage < totalPage ? this.slideRight : () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 141\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: _this.state.activePage < totalPage ? RightArrowHighlight : RightArrow,\n        alt: \"right-arrow\",\n        className: \"img-fluid slider_img\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 144\n        }\n      }))))), this.state.showSuccessMessage === \"\" && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center Do-you-want-to-join-experts-Dont-wait\",\n        style: {\n          fontSize: \"18px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 29\n        }\n      }, this.state.data[TeamArray[this.state.activeTab]][\"status\"] && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"arrow-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 41\n        }\n      }, \"Want to work with this Amazing talents?\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.continueTeam,\n        className: \"become_an_expert btn btn-primary btn-orange-color my-2 my-sm-0\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 41\n        }\n      }, \"Yes!!\")), !this.state.data[TeamArray[this.state.activeTab]][\"status\"] && /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"arrow-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 41\n        }\n      }, \"Opps!! We are still working on these skills.\")), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.findAgain,\n        className: \"become_an_expert btn btn-primary btn-orange-color my-2 my-sm-0\",\n        style: {\n          marginLeft: \"10px\"\n        },\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 33\n        }\n      }, \"Find again\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 29\n        }\n      })), this.state.showSuccessMessage !== \"\" && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"green\",\n          display: \"block\",\n          margin: \"20px auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 29\n        }\n      }, this.state.showSuccessMessage)));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        class: \"\",\n        src: Loader,\n        style: {\n          margin: \"0 auto\",\n          height: \"500px\",\n          width: \"auto\"\n        },\n        alt: \"loader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 21\n        }\n      }));\n    }\n  }\n\n}\n\nexport default withRouter(Team);","map":{"version":3,"sources":["C:/iTH_react/italenthub/src/components/pages/team.js"],"names":["React","withRouter","API_URL","API_HEADERS","axios","validateEmail","maleImage","femaleImage","starImage","LeftArrow","RightArrowHighlight","LeftArrowHighlight","RightArrow","localforage","_","Modal","SkillBar","Loader","TabArray","TeamArray","DataArray","totalPage","tempFrom","tempTo","Team","Component","state","activeTab","data","query","activePage","from","to","showModal","showContactModal","skills","talentName","name","companyName","email","isValidCompanyName","isValidName","isValidEmail","nameError","emailError","companyNameError","showSuccessMessage","slideLeft","setState","slideRight","changeActive","key","i","length","goRegister","props","history","push","showSkillsModal","el","split","map","element","Math","floor","random","Name","continueTeam","findAgain","onNameChange","ev","isDirect","target","value","onCompanyNameChange","onEmailChange","onContact","_this","post","headers","then","response","status","serverError","catch","error","message","componentDidMount","hasdata","getItem","undefined","console","log","setItem","err","render","isEmpty","colors","tagCount","marginBottom","textAlign","slice","Gender","rating","Array","x","index","keyIn","Designation","pKey","fontSize","marginLeft","color","display","margin","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,4CAAtB;AACA,OAAOC,WAAP,MAAwB,8CAAxB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,mBAAP,MAAgC,+CAAhC;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AAEA,MAAMC,QAAQ,GAAG,CACb,QADa,EACH,QADG,EACO,QADP,EACiB,QADjB,EAC2B,QAD3B,CAAjB;AAIA,MAAMC,SAAS,GAAG,CACd,OADc,EACL,OADK,EACI,OADJ,EACa,OADb,EACsB,OADtB,CAAlB;AAIA,MAAMC,SAAS,GAAG,CACd,OADc,EACL,OADK,EACI,OADJ,EACa,OADb,EACsB,OADtB,CAAlB;AAIA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,MAAM,GAAG,CAAb;;AACA,MAAMC,IAAN,SAAmBxB,KAAK,CAACyB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,SAAS,EAAE,CADP;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,KAAK,EAAE,EAHH;AAIJC,MAAAA,UAAU,EAAE,CAJR;AAKJC,MAAAA,IAAI,EAAE,CALF;AAMJC,MAAAA,EAAE,EAAE,CANA;AAOJC,MAAAA,SAAS,EAAE,KAPP;AAQJC,MAAAA,gBAAgB,EAAE,KARd;AASJC,MAAAA,MAAM,EAAE,EATJ;AAUJC,MAAAA,UAAU,EAAE,EAVR;AAWJC,MAAAA,IAAI,EAAE,EAXF;AAYJC,MAAAA,WAAW,EAAE,EAZT;AAaJC,MAAAA,KAAK,EAAE,EAbH;AAcJC,MAAAA,kBAAkB,EAAE,KAdhB;AAeJC,MAAAA,WAAW,EAAE,KAfT;AAgBJC,MAAAA,YAAY,EAAE,KAhBV;AAiBJC,MAAAA,SAAS,EAAE,EAjBP;AAkBJC,MAAAA,UAAU,EAAE,EAlBR;AAmBJC,MAAAA,gBAAgB,EAAE,EAnBd;AAoBJC,MAAAA,kBAAkB,EAAE;AApBhB,KADuB;;AAAA,SA4D/BC,SA5D+B,GA4DnB,MAAM;AACd,UAAI,KAAKrB,KAAL,CAAWI,UAAX,GAAwB,CAA5B,EAA+B;AAC3B,YAAIA,UAAU,GAAG,KAAKJ,KAAL,CAAWI,UAAX,GAAwB,CAAzC;AACA,YAAIC,IAAI,GAAG,KAAKL,KAAL,CAAWK,IAAX,GAAkB,CAA7B;AACA,YAAIC,EAAE,GAAG,KAAKN,KAAL,CAAWK,IAApB;AACA,aAAKiB,QAAL,CAAc;AACVlB,UAAAA,UADU;AAEVC,UAAAA,IAFU;AAGVC,UAAAA;AAHU,SAAd;AAKH;AACJ,KAvE8B;;AAAA,SAyE/BiB,UAzE+B,GAyElB,MAAM;AACf,UAAI,KAAKvB,KAAL,CAAWI,UAAX,GAAwBT,SAA5B,EAAuC;AACnC,YAAIS,UAAU,GAAG,KAAKJ,KAAL,CAAWI,UAAX,GAAwB,CAAzC;AACA,YAAIC,IAAI,GAAG,KAAKL,KAAL,CAAWM,EAAtB;AACA,YAAIA,EAAE,GAAG,KAAKN,KAAL,CAAWM,EAAX,GAAgB,CAAzB;AACA,aAAKgB,QAAL,CAAc;AACVlB,UAAAA,UADU;AAEVC,UAAAA,IAFU;AAGVC,UAAAA;AAHU,SAAd;AAKH;AACJ,KApF8B;;AAAA,SAsF/BkB,YAtF+B,GAsFhBC,GAAG,IAAI;AAClB,UAAIA,GAAG,KAAK,KAAKzB,KAAL,CAAWI,UAAvB,EAAmC;;AACnC,UAAIqB,GAAG,KAAK,CAAZ,EAAe;AACX,eAAO,KAAKH,QAAL,CAAc;AACjBlB,UAAAA,UAAU,EAAEqB,GADK;AAEjBpB,UAAAA,IAAI,EAAE,CAFW;AAGjBC,UAAAA,EAAE,EAAE;AAHa,SAAd,CAAP;AAKH;;AACD,UAAImB,GAAG,GAAG,KAAKzB,KAAL,CAAWI,UAArB,EAAiC;AAC7B,YAAIA,UAAU,GAAGqB,GAAjB;AACA,YAAIpB,IAAI,GAAG,CAAX;AACA,YAAIC,EAAE,GAAG,CAAT;;AACA,aAAK,IAAIoB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,GAAG,CAA1B,EAA6BC,CAAC,EAA9B,EAAkC;AAC9BrB,UAAAA,IAAI,IAAI,CAAR;AACAC,UAAAA,EAAE,IAAI,CAAN;AACH;;AACD,aAAKgB,QAAL,CAAc;AACVlB,UAAAA,UADU;AAEVC,UAAAA,IAFU;AAGVC,UAAAA;AAHU,SAAd;AAKH,OAbD,MAaO;AACH,YAAIF,UAAU,GAAGqB,GAAjB;AACA,YAAIpB,IAAI,GAAGT,QAAQ,KAAK,CAAb,GAAiB,KAAKI,KAAL,CAAWE,IAAX,CAAgB,KAAKF,KAAL,CAAWC,SAA3B,EAAsC0B,MAAtC,GAA+C,CAAhE,GAAoE/B,QAA/E;AACA,YAAIU,EAAE,GAAGT,MAAM,KAAK,CAAX,GAAe,KAAKG,KAAL,CAAWE,IAAX,CAAgB,KAAKF,KAAL,CAAWC,SAA3B,EAAsC0B,MAArD,GAA8D9B,MAAvE;;AACA,aAAK,IAAI6B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,GAAG,CAA1B,EAA6BC,CAAC,EAA9B,EAAkC;AAC9BrB,UAAAA,IAAI,IAAI,CAAR;AACAC,UAAAA,EAAE,IAAI,CAAN;AACH;;AACDV,QAAAA,QAAQ,GAAGS,IAAX;AACAR,QAAAA,MAAM,GAAGS,EAAT;AACA,aAAKgB,QAAL,CAAc;AACVlB,UAAAA,UADU;AAEVC,UAAAA,IAFU;AAGVC,UAAAA;AAHU,SAAd;AAKH;AACJ,KA5H8B;;AAAA,SA8H/BsB,UA9H+B,GA8HlB,MAAM;AACf,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AACH,KAhI8B;;AAAA,SAkI/BC,eAlI+B,GAkIZC,EAAD,IAAQ;AACtB,YAAMxB,MAAM,GAAG,EAAf;AACAwB,MAAAA,EAAE,CAAE,gBAAF,CAAF,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,GAAhC,CAAqCC,OAAD,IAAa;AAC7C,YAAIA,OAAO,KAAK,EAAhB,EAAoB;AACpB,eAAO3B,MAAM,CAACsB,IAAP,CACH;AACI,kBAAQK,OADZ;AAEI,mBAASC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,EAAL,GAAU,CAA3B,IAAgC,EAA3C;AAFb,SADG,CAAP;AAMH,OARD;AAUAN,MAAAA,EAAE,CAAE,kBAAF,CAAF,CAAuBC,KAAvB,CAA6B,GAA7B,EAAkCC,GAAlC,CAAuCC,OAAD,IAAa;AAC/C,YAAIA,OAAO,KAAK,EAAhB,EAAoB;AACpB,eAAO3B,MAAM,CAACsB,IAAP,CACH;AACI,kBAAQK,OADZ;AAEI,mBAASC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,KAAK,EAAL,GAAU,CAA3B,IAAgC,EAA3C;AAFb,SADG,CAAP;AAMH,OARD;AASA,WAAKjB,QAAL,CAAc;AACVb,QAAAA,MADU;AAEVC,QAAAA,UAAU,EAAEuB,EAAE,CAACO,IAFL;AAGVjC,QAAAA,SAAS,EAAE;AAHD,OAAd;AAKH,KA5J8B;;AAAA,SA8J/BkC,YA9J+B,GA8JhB,MAAM;AACjB,WAAKnB,QAAL,CAAc;AACVd,QAAAA,gBAAgB,EAAE;AADR,OAAd;AAGH,KAlK8B;;AAAA,SAoK/BkC,SApK+B,GAoKnB,MAAM;AACd,WAAKb,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACH,KAtK8B;;AAAA,SAwK/BY,YAxK+B,GAwKhB,CAACC,EAAD,EAAKC,QAAQ,GAAG,KAAhB,KAA0B;AACrC,YAAMlC,IAAI,GAAGkC,QAAQ,GAAG,KAAK7C,KAAL,CAAWW,IAAd,GAAqBiC,EAAE,CAACE,MAAH,CAAUC,KAApD;AACA,UAAI9B,SAAS,GAAG,EAAhB;AACA,YAAMF,WAAW,GAAGJ,IAAI,KAAK,EAAT,GAAc,IAAd,GAAqB,KAAzC;;AACA,UAAI,CAACI,WAAL,EAAkB;AACdE,QAAAA,SAAS,GAAG,gBAAZ;AACH;;AACD,WAAKK,QAAL,CAAc;AAAEX,QAAAA,IAAF;AAAQI,QAAAA,WAAR;AAAqBE,QAAAA;AAArB,OAAd;AACH,KAhL8B;;AAAA,SAkL/B+B,mBAlL+B,GAkLT,CAACJ,EAAD,EAAKC,QAAQ,GAAG,KAAhB,KAA0B;AAC5C,YAAMjC,WAAW,GAAGiC,QAAQ,GAAG,KAAK7C,KAAL,CAAWY,WAAd,GAA4BgC,EAAE,CAACE,MAAH,CAAUC,KAAlE;AACA,UAAI5B,gBAAgB,GAAG,EAAvB;AACA,YAAML,kBAAkB,GAAGF,WAAW,KAAK,EAAhB,GAAqB,IAArB,GAA4B,KAAvD;;AACA,UAAI,CAACE,kBAAL,EAAyB;AACrBK,QAAAA,gBAAgB,GAAG,wBAAnB;AACH;;AACD,WAAKG,QAAL,CAAc;AAAEV,QAAAA,WAAF;AAAeE,QAAAA,kBAAf;AAAmCK,QAAAA;AAAnC,OAAd;AACH,KA1L8B;;AAAA,SA4L/B8B,aA5L+B,GA4Lf,CAACL,EAAD,EAAKC,QAAQ,GAAG,KAAhB,KAA0B;AACtC,YAAMhC,KAAK,GAAGgC,QAAQ,GAAG,KAAK7C,KAAL,CAAWa,KAAd,GAAsB+B,EAAE,CAACE,MAAH,CAAUC,KAAtD;AACA,YAAM/B,YAAY,GAAGrC,aAAa,CAACkC,KAAD,CAAlC;AACA,UAAIK,UAAU,GAAG,EAAjB;;AACA,UAAI,CAACF,YAAL,EAAmB;AACfE,QAAAA,UAAU,GAAG,gBAAb;AACH;;AACD,WAAKI,QAAL,CAAc;AAAET,QAAAA,KAAF;AAASK,QAAAA,UAAT;AAAqBF,QAAAA;AAArB,OAAd;AACH,KApM8B;;AAAA,SAsM/BkC,SAtM+B,GAsMnB,MAAM;AACd,UAAIC,KAAK,GAAG,IAAZ;;AACA,UAAI,KAAKnD,KAAL,CAAWe,WAAX,IAA0B,KAAKf,KAAL,CAAWc,kBAArC,IAA2D,KAAKd,KAAL,CAAWgB,YAA1E,EAAwF;AACpFtC,QAAAA,KAAK,CAAC0E,IAAN,CAAW5E,OAAO,GAAG,gBAArB,EAAuC;AACnC,8BAAoB,KAAKwB,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAAC,KAAKO,KAAL,CAAWC,SAAZ,CAAzB,EAAiDP,SAAS,CAAC,KAAKM,KAAL,CAAWC,SAAZ,CAA1D,CADe;AAEnC,6BAAmB;AACf,oBAAQ,KAAKD,KAAL,CAAWW,IADJ;AAEf,qBAAS,KAAKX,KAAL,CAAWa,KAFL;AAGf,uBAAW,KAAKb,KAAL,CAAWY;AAHP;AAFgB,SAAvC,EAOG;AACCyC,UAAAA,OAAO,EAAE5E;AADV,SAPH,EAUK6E,IAVL,CAUWC,QAAD,IAAc;AAChB,cAAIA,QAAQ,CAACrD,IAAT,CAAcsD,MAAlB,EAA0B;AACtB,iBAAKlC,QAAL,CAAc;AACVF,cAAAA,kBAAkB,EAAEmC,QAAQ,CAACrD,IAAT,CAAcA,IADxB;AAEVM,cAAAA,gBAAgB,EAAE;AAFR,aAAd;AAIH,WALD,MAKO;AACH,iBAAKc,QAAL,CAAc;AACVmC,cAAAA,WAAW,EAAEF,QAAQ,CAACrD,IAAT,CAAcA,IADjB;AAEVM,cAAAA,gBAAgB,EAAE;AAFR,aAAd;AAIH;AACJ,SAtBL,EAuBKkD,KAvBL,CAuBYC,KAAD,IAAW;AACd,eAAKrC,QAAL,CAAc;AACVmC,YAAAA,WAAW,EAAEE,KAAK,CAACC,OADT;AAEVpD,YAAAA,gBAAgB,EAAE;AAFR,WAAd;AAIH,SA5BL;AA6BH,OA9BD,MA8BO;AACH,aAAKyC,aAAL,CAAmB,EAAnB,EAAuB,IAAvB;AACA,aAAKN,YAAL,CAAkB,EAAlB,EAAsB,IAAtB;AACA,aAAKK,mBAAL,CAAyB,EAAzB,EAA6B,IAA7B;AACH;AACJ,KA3O8B;AAAA;;AAwB/B,QAAMa,iBAAN,GAA0B;AACtB,QAAIC,OAAO,GAAG,MAAM3E,WAAW,CAAC4E,OAAZ,CAAoB,aAApB,CAApB;;AACA,QAAID,OAAJ,EAAa;AACT,WAAKxC,QAAL,CAAc;AACVnB,QAAAA,KAAK,EAAE2D;AADG,OAAd;AAGH,KAJD,MAIO;AACH,aAAO,KAAKjC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB,CAAP;AACH;;AAED,QAAIoB,KAAK,GAAG,IAAZ;;AACAzE,IAAAA,KAAK,CAAC0E,IAAN,CAAW5E,OAAO,GAAG,YAArB,EAAmC;AAAE,eAAS,KAAKwB,KAAL,CAAWG;AAAtB,KAAnC,EACM;AACEkD,MAAAA,OAAO,EAAE5E;AADX,KADN,EAIK6E,IAJL,CAIWC,QAAD,IAAc;AAChB,UAAIA,QAAQ,CAACrD,IAAT,CAAcsD,MAAd,KAAyBQ,SAAzB,IAAsCT,QAAQ,CAACrD,IAAT,CAAcsD,MAAd,KAAyB,KAAnE,EAA0E;AACtEL,QAAAA,KAAK,CAAC7B,QAAN,CAAe;AACXpB,UAAAA,IAAI,EAAEqD,QAAQ,CAACrD;AADJ,SAAf;AAGH,OAJD,MAIO;AACH+D,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BX,QAAQ,CAACrD,IAAT,CAAcA,IAA1C;AACAf,QAAAA,WAAW,CAACgF,OAAZ,CAAoB,YAApB,EAAkC,yCAAlC,EAA6E,UAAUC,GAAV,EAAe;AACxFjB,UAAAA,KAAK,CAACtB,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyB,cAAzB;AACH,SAFD;AAGH;AAEJ,KAhBL,EAiBK2B,KAjBL,CAiBYC,KAAD,IAAW;AACdM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,KAAK,CAACC,OAA3B;AACAzE,MAAAA,WAAW,CAACgF,OAAZ,CAAoB,YAApB,EAAkC,yCAAlC,EAA6E,UAAUC,GAAV,EAAe;AACxFjB,QAAAA,KAAK,CAACtB,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,CAAyB,cAAzB;AACH,OAFD;AAGH,KAtBL;AAuBH;;AAmLDsC,EAAAA,MAAM,GAAG;AACL,QAAI,CAACjF,CAAC,CAACkF,OAAF,CAAU,KAAKtE,KAAL,CAAWE,IAArB,CAAL,EAAiC;AAC7B,YAAMiD,KAAK,GAAG,IAAd;;AACA,YAAMoB,MAAM,GAAG;AACX,eAAO,SADI;AAEX,iBAAS;AACL,kBAAQ,MADH;AAEL,wBAAc;AAFT;AAFE,OAAf;AAOA,UAAIC,QAAQ,GAAG,IAAf;AACA7E,MAAAA,SAAS,GAAG,CAACP,CAAC,CAACkF,OAAF,CAAU,KAAKtE,KAAL,CAAWE,IAArB,CAAD,IAA+B,KAAKF,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAAC,KAAKO,KAAL,CAAWC,SAAZ,CAAzB,CAA/B,GAAkF,KAAKD,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAAC,KAAKO,KAAL,CAAWC,SAAZ,CAAzB,EAAiD,QAAjD,IAA6DoC,IAAI,CAACC,KAAL,CAAW,CAAE,KAAKtC,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAAC,KAAKO,KAAL,CAAWC,SAAZ,CAAzB,EAAiDP,SAAS,CAAC,KAAKM,KAAL,CAAWC,SAAZ,CAA1D,CAAD,CAAoF0B,MAApF,GAA6F,CAA7F,GAAiG,CAAlG,IAAuG,CAAlH,CAA7D,GAAoL,CAAtQ,GAA0Q,CAAtR;AACA,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWO,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,OAAO,EAAE,MAAM,KAAKe,QAAL,CAAc;AAAEf,UAAAA,SAAS,EAAE;AAAb,SAAd,CAArB;AAA0D,QAAA,SAAS,EAAC,aAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,eAII;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,KAAK,EAAE;AAAEkE,UAAAA,YAAY,EAAE,MAAhB;AAAwBC,UAAAA,SAAS,EAAE;AAAnC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2D,KAAK1E,KAAL,CAAWU,UAAtE,CADJ,eAEI,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKV,KAAL,CAAWS,MAA7B;AAAqC,QAAA,MAAM,EAAE8D,MAA7C;AAAqD,QAAA,cAAc,EAAE,GAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAJJ,CADJ,CADJ,eAYI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKvE,KAAL,CAAWQ,gBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,OAAO,EAAE,MAAM,KAAKc,QAAL,CAAc;AAAEd,UAAAA,gBAAgB,EAAE;AAApB,SAAd,CAArB;AAAiE,QAAA,SAAS,EAAC,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,CADJ,eAII;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,KAAK,EAAE;AAAEiE,UAAAA,YAAY,EAAE,MAAhB;AAAwBC,UAAAA,SAAS,EAAE;AAAnC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIlF,QAAQ,CAAC,KAAKQ,KAAL,CAAWC,SAAZ,CAAZ,wBAA1D,CADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,MAAjD;AAAwD,QAAA,QAAQ,EAAG2C,EAAD,IAAQ;AAAE,eAAKD,YAAL,CAAkBC,EAAlB;AAAuB,SAAnG;AAAqG,QAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWW,IAAvH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKX,KAAL,CAAWiB,SAApC,CAHJ,CAFJ,eAOI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,aAAjD;AAA+D,QAAA,QAAQ,EAAG2B,EAAD,IAAQ;AAAE,eAAKI,mBAAL,CAAyBJ,EAAzB;AAA8B,SAAjH;AAAmH,QAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWY,WAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKZ,KAAL,CAAWmB,gBAApC,CAHJ,CAPJ,eAYI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,OAAf;AAAuB,QAAA,SAAS,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,cAA7B;AAA4C,QAAA,IAAI,EAAC,OAAjD;AAAyD,QAAA,QAAQ,EAAGyB,EAAD,IAAQ;AAAE,eAAKK,aAAL,CAAmBL,EAAnB;AAAwB,SAArG;AAAuG,QAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWa,KAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI;AAAM,QAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyB,KAAKb,KAAL,CAAWkB,UAApC,CAHJ,CAZJ,eAiBI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,OAAO,EAAE,KAAKgC,SAAtB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AAA+C,QAAA,SAAS,EAAC,2CAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAjBJ,CAJJ,CADJ,CAZJ,eAwCI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAxCJ,eAyCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,yCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ1D,QAAQ,CAAC2C,GAAT,CAAa,CAACF,EAAD,EAAKR,GAAL,KAAa;AACtB,YAAI,CAAC,KAAKzB,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAACgC,GAAD,CAAzB,EAAgC,QAAhC,CAAL,EAAgD;AAChD,4BACI;AAAI,UAAA,SAAS,EAAC,UAAd;AAAyB,UAAA,GAAG,EAAEA,GAA9B;AAAmC,UAAA,OAAO,EAAE,MAAM;AAC9C,iBAAKH,QAAL,CAAc;AACVrB,cAAAA,SAAS,EAAEwB,GADD;AAEVrB,cAAAA,UAAU,EAAE,CAFF;AAGVC,cAAAA,IAAI,EAAE,CAHI;AAIVC,cAAAA,EAAE,EAAE;AAJM,aAAd;AAMH,WAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAQI;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAG,YAAW,KAAKN,KAAL,CAAWC,SAAX,KAAyBwB,GAAzB,GAA+B,QAA/B,GAA0C,EAAG,EAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoFQ,EAApF,CARJ,CADJ;AAYH,OAdD,CAFR,CADJ,CAzCJ,eA+DI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAES,CAAC7C,CAAC,CAACkF,OAAF,CAAU,KAAKtE,KAAL,CAAWE,IAArB,CAAD,IAA+B,KAAKF,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAAC,KAAKO,KAAL,CAAWC,SAAZ,CAAzB,CAAhC,GAAoF,KAAKD,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAAC,KAAKO,KAAL,CAAWC,SAAZ,CAAzB,EAAiD,QAAjD,IAA8D,KAAKD,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAAC,KAAKO,KAAL,CAAWC,SAAZ,CAAzB,EAAiDP,SAAS,CAAC,KAAKM,KAAL,CAAWC,SAAZ,CAA1D,CAAD,CAAoF0E,KAApF,CAA0F,KAAK3E,KAAL,CAAWK,IAArG,EAA2G,KAAKL,KAAL,CAAWM,EAAtH,EAA0H6B,GAA1H,CAA8H,CAACF,EAAD,EAAKR,GAAL,KAAa;AACxR;AACA,4BACI;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAgD,UAAA,GAAG,EAAEA,GAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,GAAG,EAAEQ,EAAE,CAAC2C,MAAH,KAAc,MAAd,GAAuBhG,SAAvB,GAAmCC,WAA7C;AAA0D,UAAA,SAAS,EAAC,WAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,eAII;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMoD,EAAE,CAAC4C,MAAT,CADJ,eAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQC,KAAK,CAACzE,IAAN,CAAWyE,KAAK,CAAC7C,EAAE,CAAC4C,MAAJ,CAAhB,EAA6B,CAACE,CAAD,EAAIC,KAAJ,KAAcA,KAAK,GAAG,CAAnD,EAAsD7C,GAAtD,CAA0D8C,KAAK,IAAI;AAC/D,8BACI;AAAM,YAAA,GAAG,EAAEA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAkB;AAAK,YAAA,GAAG,EAAEnG,SAAV;AAAqB,YAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB,CADJ;AAGH,SAJD,CAFR,CAFJ,CAJJ,CADJ,eAoBI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA6BmD,EAAE,CAACO,IAAhC,CADJ,eAEI;AAAG,UAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BP,EAAE,CAACiD,WAA7B,CAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKjD,EAAE,CAAE,gBAAF,CAAF,CAAqBC,KAArB,CAA2B,GAA3B,EAAgCC,GAAhC,CAAoC,CAACC,OAAD,EAAU+C,IAAV,KAAmB;AACpD,cAAIA,IAAI,GAAG,CAAX,EAAc,OAAOX,QAAQ,GAAG,KAAlB;AACd,iBAAOpC,OAAO,KAAK,EAAZ,gBAAiB;AAAM,YAAA,GAAG,EAAE+C,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAkB/C,OAAlB,CAAjB,GAAqD,EAA5D;AACH,SAHA,CADL,EAKKH,EAAE,CAAE,kBAAF,CAAF,CAAuBC,KAAvB,CAA6B,GAA7B,EAAkCC,GAAlC,CAAsC,CAACC,OAAD,EAAU+C,IAAV,KAAmB;AACtD,cAAIX,QAAJ,EAAc;AACV,mBAAOpC,OAAO,KAAK,EAAZ,gBAAiB;AAAM,cAAA,GAAG,EAAE+C,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAkB/C,OAAlB,CAAjB,GAAqD,EAA5D;AACH;;AACD;AACH,SALA,CALL,CAHJ,CApBJ,eAoCI;AAAK,UAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAsC;AAAQ,UAAA,SAAS,EAAC,wBAAlB;AAA2C,UAAA,OAAO,EAAE,MAAM,KAAKJ,eAAL,CAAqBC,EAArB,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAtC,CApCJ,CADJ,CADJ;AA2CH,OA7CgJ,CAA7D,GA6C/E,EA7CL,GA6CU,EA/ClB,CA/DJ,eAiHI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQtC,SAAS,GAAG,CAAZ,iBACA;AAAI,QAAA,SAAS,EAAC,yCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAiC,QAAA,OAAO,EAAEwD,KAAK,CAACnD,KAAN,CAAYI,UAAZ,KAA2B,CAA3B,GAA+B,KAAKiB,SAApC,GAAgD,MAAM,CAAG,CAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAK,QAAA,GAAG,EAAE8B,KAAK,CAACnD,KAAN,CAAYI,UAAZ,KAA2B,CAA3B,GAA+BnB,kBAA/B,GAAoDF,SAA9D;AAAyE,QAAA,GAAG,EAAC,YAA7E;AAA0F,QAAA,SAAS,EAAC,sBAApG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAArG,CADJ,EAGQ+F,KAAK,CAACzE,IAAN,CAAWyE,KAAK,CAACnF,SAAD,CAAhB,EAA6B,CAACoF,CAAD,EAAIC,KAAJ,KAAcA,KAAK,GAAG,CAAnD,EAAsD7C,GAAtD,CAA0D8C,KAAK,IAAI;AAC/D,4BAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAgB,UAAA,OAAO,EAAE,MAAM;AAAE9B,YAAAA,KAAK,CAAC3B,YAAN,CAAmByD,KAAnB;AAA2B,WAA5D;AAA8D,UAAA,SAAS,EAAG,oBAAmBA,KAAK,KAAK9B,KAAK,CAACnD,KAAN,CAAYI,UAAtB,GAAmC,QAAnC,GAA8C,EAAG,EAA9I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAFD,CAHR,eAOI;AAAI,QAAA,SAAS,EAAC,kBAAd;AAAiC,QAAA,OAAO,EAAE+C,KAAK,CAACnD,KAAN,CAAYI,UAAZ,GAAyBT,SAAzB,GAAqC,KAAK4B,UAA1C,GAAuD,MAAM,CAAG,CAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA4G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAG;AAAK,QAAA,GAAG,EAAE4B,KAAK,CAACnD,KAAN,CAAYI,UAAZ,GAAyBT,SAAzB,GAAqCX,mBAArC,GAA2DE,UAArE;AAAiF,QAAA,GAAG,EAAC,aAArF;AAAmG,QAAA,SAAS,EAAC,sBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,CAA5G,CAPJ,CAHR,CAjHJ,EAgIQ,KAAKc,KAAL,CAAWoB,kBAAX,KAAkC,EAAlC,iBACA,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,mDAAf;AAAmE,QAAA,KAAK,EAAE;AAAEgE,UAAAA,QAAQ,EAAE;AAAZ,SAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKpF,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAAC,KAAKO,KAAL,CAAWC,SAAZ,CAAzB,EAAiD,QAAjD,kBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKwC,YAAtB;AAAoC,QAAA,SAAS,EAAC,gEAA9C;AAA+G,QAAA,KAAK,EAAE;AAAE4C,UAAAA,UAAU,EAAE;AAAd,SAAtH;AAA8I,QAAA,IAAI,EAAC,QAAnJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ,CAFR,EAOK,CAAC,KAAKrF,KAAL,CAAWE,IAAX,CAAgBT,SAAS,CAAC,KAAKO,KAAL,CAAWC,SAAZ,CAAzB,EAAiD,QAAjD,CAAD,iBACG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDADJ,CARR,eAYI;AAAQ,QAAA,OAAO,EAAE,KAAKyC,SAAtB;AAAiC,QAAA,SAAS,EAAC,gEAA3C;AAA4G,QAAA,KAAK,EAAE;AAAE2C,UAAAA,UAAU,EAAE;AAAd,SAAnH;AAA2I,QAAA,IAAI,EAAC,QAAhJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZJ,CADJ,eAeI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfJ,CAjIR,EAoJQ,KAAKrF,KAAL,CAAWoB,kBAAX,KAAkC,EAAlC,iBACA;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,KAAK,EAAE;AAAEkE,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,OAAO,EAAE,OAA3B;AAAoCC,UAAAA,MAAM,EAAE;AAA5C,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyE,KAAKxF,KAAL,CAAWoB,kBAApF,CADJ,CArJR,CADJ;AA4JH,KAvKD,MAuKO;AACH,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEsD,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,KAAK,EAAC,EAAX;AAAc,QAAA,GAAG,EAAEnF,MAAnB;AAA2B,QAAA,KAAK,EAAE;AAAEiG,UAAAA,MAAM,EAAE,QAAV;AAAoBC,UAAAA,MAAM,EAAE,OAA5B;AAAqCC,UAAAA,KAAK,EAAE;AAA5C,SAAlC;AAAwF,QAAA,GAAG,EAAC,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;AACJ;;AA5Z8B;;AA+ZnC,eAAenH,UAAU,CAACuB,IAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { API_URL, API_HEADERS } from '../../utils/api';\r\nimport axios from 'axios';\r\nimport { validateEmail } from '../../utils/helpers';\r\nimport maleImage from '../../assets/images/male-red-120-x-120.png';\r\nimport femaleImage from '../../assets/images/female-red-120-x-120.png';\r\nimport starImage from '../../assets/images/star.png';\r\nimport LeftArrow from '../../assets/images/left-arrow.png';\r\nimport RightArrowHighlight from '../../assets/images/right-arrow-highlight.png';\r\nimport LeftArrowHighlight from '../../assets/images/left-arrow-highlight.png';\r\nimport RightArrow from '../../assets/images/right-arrow.png';\r\nimport localforage from 'localforage';\r\nimport _ from 'lodash';\r\nimport Modal from 'simple-react-modal';\r\nimport SkillBar from 'react-skillbars';\r\nimport Loader from '../../assets/images/loader.gif';\r\n\r\nconst TabArray = [\r\n    \"Team 1\", \"Team 2\", \"Team 3\", \"Team 4\", \"Team 5\"\r\n];\r\n\r\nconst TeamArray = [\r\n    \"team1\", \"team2\", \"team3\", \"team4\", \"team5\"\r\n];\r\n\r\nconst DataArray = [\r\n    \"data1\", \"data2\", \"data3\", \"data4\", \"data5\"\r\n];\r\n\r\nlet totalPage = 0;\r\nlet tempFrom = 0;\r\nlet tempTo = 0;\r\nclass Team extends React.Component {\r\n    state = {\r\n        activeTab: 0,\r\n        data: [],\r\n        query: [],\r\n        activePage: 1,\r\n        from: 0,\r\n        to: 4,\r\n        showModal: false,\r\n        showContactModal: false,\r\n        skills: [],\r\n        talentName: \"\",\r\n        name: \"\",\r\n        companyName: \"\",\r\n        email: \"\",\r\n        isValidCompanyName: false,\r\n        isValidName: false,\r\n        isValidEmail: false,\r\n        nameError: \"\",\r\n        emailError: \"\",\r\n        companyNameError: \"\",\r\n        showSuccessMessage: \"\",\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let hasdata = await localforage.getItem('find-talent');\r\n        if (hasdata) {\r\n            this.setState({\r\n                query: hasdata\r\n            })\r\n        } else {\r\n            return this.props.history.push(\"/find-talent\")\r\n        }\r\n\r\n        let _this = this;\r\n        axios.post(API_URL + \"mrs/v1/api\", { \"param\": this.state.query }\r\n            , {\r\n                headers: API_HEADERS\r\n            })\r\n            .then((response) => {\r\n                if (response.data.status === undefined || response.data.status !== false) {\r\n                    _this.setState({\r\n                        data: response.data\r\n                    })\r\n                } else {\r\n                    console.log(\"Server error\", response.data.data);\r\n                    localforage.setItem('team-error', \"Unable to find team. Please try again!!\", function (err) {\r\n                        _this.props.history.push(\"/find-talent\");\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"Error\", error.message);\r\n                localforage.setItem('team-error', \"Unable to find team. Please try again!!\", function (err) {\r\n                    _this.props.history.push(\"/find-talent\");\r\n                });\r\n            })\r\n    }\r\n\r\n    slideLeft = () => {\r\n        if (this.state.activePage > 1) {\r\n            let activePage = this.state.activePage - 1;\r\n            let from = this.state.from - 4;\r\n            let to = this.state.from;\r\n            this.setState({\r\n                activePage,\r\n                from,\r\n                to\r\n            })\r\n        }\r\n    }\r\n\r\n    slideRight = () => {\r\n        if (this.state.activePage < totalPage) {\r\n            let activePage = this.state.activePage + 1;\r\n            let from = this.state.to;\r\n            let to = this.state.to + 4;\r\n            this.setState({\r\n                activePage,\r\n                from,\r\n                to\r\n            })\r\n        }\r\n    }\r\n\r\n    changeActive = key => {\r\n        if (key === this.state.activePage) return;\r\n        if (key === 1) {\r\n            return this.setState({\r\n                activePage: key,\r\n                from: 0,\r\n                to: 4\r\n            })\r\n        }\r\n        if (key > this.state.activePage) {\r\n            let activePage = key;\r\n            let from = 0;\r\n            let to = 4;\r\n            for (let i = 0; i < key - 1; i++) {\r\n                from += 4;\r\n                to += 4;\r\n            }\r\n            this.setState({\r\n                activePage,\r\n                from,\r\n                to\r\n            })\r\n        } else {\r\n            let activePage = key;\r\n            let from = tempFrom === 0 ? this.state.data[this.state.activeTab].length - 4 : tempFrom;\r\n            let to = tempTo === 0 ? this.state.data[this.state.activeTab].length : tempTo;\r\n            for (let i = 0; i < key - 1; i++) {\r\n                from -= 4;\r\n                to -= 4;\r\n            }\r\n            tempFrom = from;\r\n            tempTo = to;\r\n            this.setState({\r\n                activePage,\r\n                from,\r\n                to\r\n            })\r\n        }\r\n    }\r\n\r\n    goRegister = () => {\r\n        this.props.history.push(\"/register\");\r\n    }\r\n\r\n    showSkillsModal = (el) => {\r\n        const skills = [];\r\n        el[`Primary Skills`].split(',').map((element) => {\r\n            if (element === \"\") return;\r\n            return skills.push(\r\n                {\r\n                    \"type\": element,\r\n                    \"level\": Math.floor(Math.random() * (85 - 60 + 1) + 60)\r\n                }\r\n            );\r\n        });\r\n\r\n        el[`Secondary Skills`].split(',').map((element) => {\r\n            if (element === \"\") return;\r\n            return skills.push(\r\n                {\r\n                    \"type\": element,\r\n                    \"level\": Math.floor(Math.random() * (50 - 20 + 1) + 20)\r\n                }\r\n            );\r\n        })\r\n        this.setState({\r\n            skills,\r\n            talentName: el.Name,\r\n            showModal: true\r\n        })\r\n    }\r\n\r\n    continueTeam = () => {\r\n        this.setState({\r\n            showContactModal: true\r\n        })\r\n    }\r\n\r\n    findAgain = () => {\r\n        this.props.history.push(\"/find-talent\");\r\n    }\r\n\r\n    onNameChange = (ev, isDirect = false) => {\r\n        const name = isDirect ? this.state.name : ev.target.value;\r\n        let nameError = \"\";\r\n        const isValidName = name !== \"\" ? true : false;\r\n        if (!isValidName) {\r\n            nameError = \"Name required.\"\r\n        }\r\n        this.setState({ name, isValidName, nameError });\r\n    }\r\n\r\n    onCompanyNameChange = (ev, isDirect = false) => {\r\n        const companyName = isDirect ? this.state.companyName : ev.target.value;\r\n        let companyNameError = \"\";\r\n        const isValidCompanyName = companyName !== \"\" ? true : false;\r\n        if (!isValidCompanyName) {\r\n            companyNameError = \"Company Name required.\"\r\n        }\r\n        this.setState({ companyName, isValidCompanyName, companyNameError });\r\n    }\r\n\r\n    onEmailChange = (ev, isDirect = false) => {\r\n        const email = isDirect ? this.state.email : ev.target.value;\r\n        const isValidEmail = validateEmail(email);\r\n        let emailError = \"\";\r\n        if (!isValidEmail) {\r\n            emailError = \"Invalid email.\"\r\n        }\r\n        this.setState({ email, emailError, isValidEmail });\r\n    }\r\n\r\n    onContact = () => {\r\n        let _this = this;\r\n        if (this.state.isValidName && this.state.isValidCompanyName && this.state.isValidEmail) {\r\n            axios.post(API_URL + \"contact/v1/api\", {\r\n                \"candidate_detail\": this.state.data[TeamArray[this.state.activeTab]][DataArray[this.state.activeTab]],\r\n                \"employer_detail\": {\r\n                    \"Name\": this.state.name,\r\n                    \"Email\": this.state.email,\r\n                    \"Company\": this.state.companyName\r\n                }\r\n            }, {\r\n                headers: API_HEADERS\r\n            })\r\n                .then((response) => {\r\n                    if (response.data.status) {\r\n                        this.setState({\r\n                            showSuccessMessage: response.data.data,\r\n                            showContactModal: false\r\n                        })\r\n                    } else {\r\n                        this.setState({\r\n                            serverError: response.data.data,\r\n                            showContactModal: false\r\n                        })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    this.setState({\r\n                        serverError: error.message,\r\n                        showContactModal: false\r\n                    })\r\n                })\r\n        } else {\r\n            this.onEmailChange({}, true);\r\n            this.onNameChange({}, true);\r\n            this.onCompanyNameChange({}, true);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!_.isEmpty(this.state.data)) {\r\n            const _this = this;\r\n            const colors = {\r\n                \"bar\": \"#ff6158\",\r\n                \"title\": {\r\n                    \"text\": \"#fff\",\r\n                    \"background\": \"#ff6158\"\r\n                }\r\n            }\r\n            let tagCount = true;\r\n            totalPage = !_.isEmpty(this.state.data) && this.state.data[TeamArray[this.state.activeTab]] ? this.state.data[TeamArray[this.state.activeTab]][\"status\"] ? Math.floor(((this.state.data[TeamArray[this.state.activeTab]][DataArray[this.state.activeTab]]).length + 4 - 1) / 4) : 0 : 0;\r\n            return (\r\n                <React.Fragment>\r\n                    <Modal show={this.state.showModal}>\r\n                        <div className=\"skills-modal-body\">\r\n                            <div className=\"col-12\">\r\n                                <span onClick={() => this.setState({ showModal: false })} className=\"modal-close\">&times;</span>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <h6 style={{ marginBottom: \"20px\", textAlign: \"center\" }}>{this.state.talentName}</h6>\r\n                                <SkillBar skills={this.state.skills} colors={colors} animationDelay={500} />\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                    <Modal show={this.state.showContactModal}>\r\n                        <div>\r\n                            <div className=\"col-12\">\r\n                                <span onClick={() => this.setState({ showContactModal: false })} className=\"modal-close\">&times;</span>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <h6 style={{ marginBottom: \"20px\", textAlign: \"center\" }}><b>{TabArray[this.state.activeTab]} Will work for you.</b></h6>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"name\" onChange={(ev) => { this.onNameChange(ev) }} value={this.state.name} />\r\n                                    <span className=\"error\">{this.state.nameError}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"companyname\" className=\"form-label\">Company Name</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"companyname\" onChange={(ev) => { this.onCompanyNameChange(ev) }} value={this.state.companyName} />\r\n                                    <span className=\"error\">{this.state.companyNameError}</span>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"form-label\">Email</label>\r\n                                    <input type=\"text\" className=\"form-control\" name=\"email\" onChange={(ev) => { this.onEmailChange(ev) }} value={this.state.email} />\r\n                                    <span className=\"error\">{this.state.emailError}</span>\r\n                                </div>\r\n                                <div className=\"btn_div\">\r\n                                    <button onClick={this.onContact} type=\"button\" className=\"btn btn-login float-right register_button\">Submit</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </Modal>\r\n                    <h1 className=\"main_box_heading\">Meet Talent in Our Network</h1>\r\n                    <div>{\r\n                        <ul className=\"nav justify-content-center menu_content\">\r\n                            {\r\n                                TabArray.map((el, key) => {\r\n                                    if (!this.state.data[TeamArray[key]][\"status\"]) return;\r\n                                    return (\r\n                                        <li className=\"nav-item\" key={key} onClick={() => {\r\n                                            this.setState({\r\n                                                activeTab: key,\r\n                                                activePage: 1,\r\n                                                from: 0,\r\n                                                to: 4\r\n                                            });\r\n                                        }}>\r\n                                            <a href=\"#\" className={`nav-link ${this.state.activeTab === key ? \"active\" : \"\"}`}>{el}</a>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    }\r\n                    </div>\r\n                    <div className=\"row categories\">\r\n                        {\r\n                            (!_.isEmpty(this.state.data) && this.state.data[TeamArray[this.state.activeTab]]) ? this.state.data[TeamArray[this.state.activeTab]][\"status\"] ? (this.state.data[TeamArray[this.state.activeTab]][DataArray[this.state.activeTab]]).slice(this.state.from, this.state.to).map((el, key) => {\r\n                                // el = el[key];\r\n                                return (\r\n                                    <div className=\"col-sm-12 col-md-3 chart-block\" key={key} >\r\n                                        <div className=\"custom-column\">\r\n                                            <div className=\"custom-column-header\">\r\n                                                <div className=\"profile_img\">\r\n                                                    <img src={el.Gender === \"Male\" ? maleImage : femaleImage} className=\"img-fluid\" />\r\n                                                </div>\r\n                                                <div className=\"rating_div\">\r\n                                                    <div>{el.rating}</div>\r\n                                                    <div className=\"ratings\">\r\n                                                        {\r\n                                                            Array.from(Array(el.rating), (x, index) => index + 1).map(keyIn => {\r\n                                                                return (\r\n                                                                    <span key={keyIn}><img src={starImage} className=\"img-fluid\" /></span>\r\n                                                                )\r\n                                                            })\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n                                            <div className=\"custom-column-content\">\r\n                                                <div className=\"card-title\">{el.Name}</div>\r\n                                                <p className=\"card-desc\">{el.Designation}</p>\r\n                                                <div className=\"keywords\">\r\n                                                    {el[`Primary Skills`].split(',').map((element, pKey) => {\r\n                                                        if (pKey > 1) return tagCount = false;\r\n                                                        return element !== \"\" ? <span key={pKey}>{element}</span> : \"\";\r\n                                                    })}\r\n                                                    {el[`Secondary Skills`].split(',').map((element, pKey) => {\r\n                                                        if (tagCount) {\r\n                                                            return element !== \"\" ? <span key={pKey}>{element}</span> : \"\";\r\n                                                        }\r\n                                                        return;\r\n                                                    })}\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"custom-column-footer\"><button className=\"btn btn-lg details_btn\" onClick={() => this.showSkillsModal(el)}>Details</button></div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            }) : \"\" : \"\"\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\r\n                            totalPage > 1 &&\r\n                            <ul className=\"list-inline verticle-slider text-center\">\r\n                                <li className=\"list-inline-item\" onClick={_this.state.activePage !== 1 ? this.slideLeft : () => { }}><a><img src={_this.state.activePage !== 1 ? LeftArrowHighlight : LeftArrow} alt=\"left-arrow\" className=\"img-fluid slider_img\" /></a></li>\r\n                                {\r\n                                    Array.from(Array(totalPage), (x, index) => index + 1).map(keyIn => {\r\n                                        return <li key={keyIn} onClick={() => { _this.changeActive(keyIn) }} className={`list-inline-item ${keyIn === _this.state.activePage ? \"active\" : \"\"}`}></li>\r\n                                    })\r\n                                }\r\n                                <li className=\"list-inline-item\" onClick={_this.state.activePage < totalPage ? this.slideRight : () => { }}><a><img src={_this.state.activePage < totalPage ? RightArrowHighlight : RightArrow} alt=\"right-arrow\" className=\"img-fluid slider_img\" /></a></li>\r\n                            </ul>\r\n                        }\r\n                    </div>\r\n                    {\r\n                        this.state.showSuccessMessage === \"\" &&\r\n                        <React.Fragment>\r\n                            <div className=\"text-center Do-you-want-to-join-experts-Dont-wait\" style={{ fontSize: \"18px\" }}>\r\n                                {this.state.data[TeamArray[this.state.activeTab]][\"status\"] &&\r\n                                    <React.Fragment>\r\n                                        <span className=\"arrow-highlight\">Want to work with this Amazing talents?</span>\r\n                                        <button onClick={this.continueTeam} className=\"become_an_expert btn btn-primary btn-orange-color my-2 my-sm-0\" style={{ marginLeft: \"10px\" }} type=\"button\">Yes!!</button>\r\n                                    </React.Fragment>\r\n                                }\r\n                                {!this.state.data[TeamArray[this.state.activeTab]][\"status\"] &&\r\n                                    <React.Fragment>\r\n                                        <span className=\"arrow-highlight\">Opps!! We are still working on these skills.</span>\r\n                                     </React.Fragment>\r\n                                }\r\n                                <button onClick={this.findAgain} className=\"become_an_expert btn btn-primary btn-orange-color my-2 my-sm-0\" style={{ marginLeft: \"10px\" }} type=\"button\">Find again</button>\r\n                            </div>\r\n                            <div className=\"text-center\"></div>\r\n                        </React.Fragment>\r\n                    }\r\n                    {\r\n                        this.state.showSuccessMessage !== \"\" &&\r\n                        <div className=\"row\">\r\n                            <span style={{ color: \"green\", display: \"block\", margin: \"20px auto\" }}>{this.state.showSuccessMessage}</span>\r\n                        </div>\r\n                    }\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <div style={{ textAlign: \"center\" }}>\r\n                    <img class=\"\" src={Loader} style={{ margin: \"0 auto\", height: \"500px\", width: \"auto\" }} alt=\"loader\" />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default withRouter(Team);"]},"metadata":{},"sourceType":"module"}